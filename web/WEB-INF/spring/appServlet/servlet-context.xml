<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <!--<resources mapping="/resources/**" location="/resources/"/>-->
    <resources mapping="/resources/**" location="/resources/"/>
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!--Remember the value of top-level package given at the time of project creation, itâ€™s the same value getting used here.-->
    <!--<context:component-scan base-package="com.ch1.spring.springcore.ch04"/>
    <beans:bean name="myBean" class="com.ch1.spring.springcore.ch04.beans.MyBean" scope="singleton"/>-->

    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch07.spring"/>-->

    <!--ch08:Spring Restful Web Service Example with JSON-->
    <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter"
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch08.controller"/>
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        &lt;!&ndash; setting maximum upload size &ndash;&gt;
        <beans:property name="maxUploadSize" value="102400000"/>
    </beans:bean>-->

    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch09.controller"/>-->
    <!--ch10:Spring MVC Internationalization and Localization Example-->
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="classpath:/messages"/>
        <!--<beans:property name="basename" value="classpath:resources"/>-->
        <beans:property name="defaultEncoding" value="UTF-8"/>
    </beans:bean>
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <beans:property name="defaultLocale" value="en"/>
        <beans:property name="cookieName" value="myAppLocaleCookie"/>
        <beans:property name="cookieMaxAge" value="3600"/>
    </beans:bean>
    <interceptors>
        <beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="locale"/>
        </beans:bean>
    </interceptors>
    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch10.controller"/>-->

    <!--ch11:Spring MVC Form Validation Example-->
    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch11.controller"/>-->
    <beans:bean id="employeeValidator" class="com.ch1.spring.springmvc.ch11.validator.EmployeeFormValidator"/>

    <!--ch12:Spring MVC Exception Handling-->
    <!--<beans:bean id="simpleMappingExceptionResolver"
                class="com.ch1.spring.springmvc.ch12.resolver.MySimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:map>
                <beans:entry key="Exception" value="generic_error"/>
            </beans:map>
        </beans:property>
        <beans:property name="defaultErrorView" value="generic_error"/>
    </beans:bean>-->

    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch12.controller"/>-->

    <!--com.ch1.spring.springmvc.ch13.Interceptor-->
    <!-- Configuring interceptors based on URI -->
    <interceptors>
        <interceptor>
            <mapping path="/home_ch13"/>
            <beans:bean class="com.ch1.spring.springmvc.ch13.Interceptor.RequestProcessingTimeInterceptor"/>
        </interceptor>
    </interceptors>

    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch13.Controller"/>-->

    <!--<context:component-scan base-package="com.ch1.spring.springmvc.ch14.controller"/>-->

    <!--com.ch1.spring.springjdbc.ch16.controller-->
    <!-- Create DataSource Bean -->
    <beans:bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB"/>
    </beans:bean>
    <!-- using JEE namespace for lookup -->
    <!--
    <jee:jndi-lookup id="dbDataSource" jndi-name="jdbc/MyLocalDB"
              expected-type="javax.sql.DataSource" />
     -->
    <context:component-scan base-package="com.ch1.spring.springjdbc.ch16.controller"/>

    
</beans:beans>